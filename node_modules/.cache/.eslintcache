[{"/home/dima/Desktop/web/smartbrain/src/index.js":"1","/home/dima/Desktop/web/smartbrain/src/App.js":"2","/home/dima/Desktop/web/smartbrain/src/reportWebVitals.js":"3","/home/dima/Desktop/web/smartbrain/src/components/Navigation/Navigation.js":"4","/home/dima/Desktop/web/smartbrain/src/components/Logo/Logo.js":"5","/home/dima/Desktop/web/smartbrain/src/components/Rank/Rank.js":"6","/home/dima/Desktop/web/smartbrain/src/components/ImageLinkForm/ImageLinkForm.js":"7","/home/dima/Desktop/web/smartbrain/src/components/Particles/Particles.js":"8","/home/dima/Desktop/web/smartbrain/src/components/Signin/Signin.js":"9","/home/dima/Desktop/web/smartbrain/src/components/FaceRecognition/FaceRecognition.js":"10","/home/dima/Desktop/web/smartbrain/src/components/Register/Register.js":"11"},{"size":554,"mtime":1657440463666,"results":"12","hashOfConfig":"13"},{"size":3335,"mtime":1658756925791,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1657439742009,"results":"15","hashOfConfig":"13"},{"size":760,"mtime":1657726108625,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1657442682165,"results":"17","hashOfConfig":"13"},{"size":337,"mtime":1658339595955,"results":"18","hashOfConfig":"13"},{"size":786,"mtime":1658339559134,"results":"19","hashOfConfig":"13"},{"size":1721,"mtime":1657708852851,"results":"20","hashOfConfig":"13"},{"size":3110,"mtime":1658338847174,"results":"21","hashOfConfig":"13"},{"size":521,"mtime":1657712204202,"results":"22","hashOfConfig":"13"},{"size":3780,"mtime":1658337851622,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ll212w",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/home/dima/Desktop/web/smartbrain/src/index.js",[],["50","51"],"/home/dima/Desktop/web/smartbrain/src/App.js",[],"/home/dima/Desktop/web/smartbrain/src/reportWebVitals.js",[],"/home/dima/Desktop/web/smartbrain/src/components/Navigation/Navigation.js",[],"/home/dima/Desktop/web/smartbrain/src/components/Logo/Logo.js",[],"/home/dima/Desktop/web/smartbrain/src/components/Rank/Rank.js",[],"/home/dima/Desktop/web/smartbrain/src/components/ImageLinkForm/ImageLinkForm.js",[],"/home/dima/Desktop/web/smartbrain/src/components/Particles/Particles.js",["52"],"import React from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nfunction particles({}) {\n  const particlesInit = async (main) => {\n    // console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  const particlesLoaded = (container) => {\n    // console.log(container);\n  };\n  return (\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      loaded={particlesLoaded}\n      options={{\n        fpsLimit: 60,\n        particles: {\n          color: {\n            value: \"#0d47a1\",\n          },\n          links: {\n            color: \"#0d47a1\",\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 1,\n          },\n          collisions: {\n            enable: true,\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\",\n            },\n            random: false,\n            speed: 1,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 800,\n            },\n            value: 60,\n          },\n          opacity: {\n            value: 0.5,\n          },\n          shape: {\n            type: [\"circle\"],\n          },\n          size: {\n            value: { min: 1, max: 2 },\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n  );\n}\n\nexport default particles;","/home/dima/Desktop/web/smartbrain/src/components/Signin/Signin.js",["53"],"import { toHaveAccessibleDescription } from '@testing-library/jest-dom/dist/matchers';\nimport React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: '',\n        }\n    }\n\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('http://localhost:3000/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if(user.id){\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n            <main className=\"pa4 black-80\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input className=\"pa2 b--near-black input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"email\" \n                            name=\"email-address\"  \n                            id=\"email-address\"\n                            onChange={this.onEmailChange}/>\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input className=\"b b--near-black pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"password\"\n                            name=\"password\"  \n                            id=\"password\" \n                            onChange={this.onPasswordChange}/>\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input onClick={this.onSubmitSignIn} className=\"b b--near-black ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                        <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\n                    </div>\n                </div>\n            </main>\n        </article>\n        );\n    }\n}\n\nexport default Signin;","/home/dima/Desktop/web/smartbrain/src/components/FaceRecognition/FaceRecognition.js",[],"/home/dima/Desktop/web/smartbrain/src/components/Register/Register.js",["54"],"import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitRegister = () => {\n        fetch('http://localhost:3000/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if(user) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n    \n    render() {\n        const { onRouteChange } = this.props;\n        return (\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n            <main className=\"pa4 black-80\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0v\">\n                        <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\n                            <input \n                                className=\"pa2 b--near-black input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"text\" \n                                name=\"name\"  \n                                id=\"name\"\n                                onChange={ this.onNameChange }\n                            />\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input \n                                className=\"pa2 b--near-black input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"  \n                                id=\"email-address\"\n                                onChange={ this.onEmailChange } \n                            />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input \n                                className=\"b b--near-black pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\"\n                                name=\"password\"\n                                id=\"password\" \n                                onChange={ this.onPasswordChange }\n                            />\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input \n                        className=\"b b--near-black ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                        type=\"submit\" \n                        value=\"Register\" \n                        onClick={this.onSubmitRegister}/>\n                    </div>\n                </div>\n            </main>\n        </article>\n        )    \n    }\n    \n    \n}\n\nexport default Register;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":5,"column":20,"nodeType":"61","messageId":"62","endLine":5,"endColumn":22},{"ruleId":"63","severity":1,"message":"64","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":37},{"ruleId":"63","severity":1,"message":"67","line":44,"column":17,"nodeType":"65","messageId":"66","endLine":44,"endColumn":30},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'toHaveAccessibleDescription' is defined but never used.","Identifier","unusedVar","'onRouteChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]